<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task Management</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f4f4f4;
            color: #333;
            line-height: 1.6;
        }
        header {
            background-color: #007bff;
            color: white;
            padding: 15px 0;
            text-align: center;
        }
        header nav ul {
            display: flex;
            justify-content: center;
            list-style: none;
            padding: 0;
        }
        header nav ul li {
            margin: 0 15px;
        }
        header nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.3s;
        }
        header nav ul li a:hover {
            color: #ffdd57;
        }
        #box {
            max-width: 1200px;
            margin: 20px auto;
            padding: 20px;
            border: 2px solid black;
            border-radius: 10px;
            box-shadow: inset 0 -3em 3em rgb(0 200 0 / 30%), 0 0 0 2px white, 0.3em 0.3em 1em rgb(200 0 0 / 60%);
        }
        .task-card {
            background: white;
            border-radius: 8px;
            margin-bottom: 20px;
            padding: 20px;
            display: flex;
            flex-direction: column;
        }
        .task-card h1 {
            font-size: 22px;
            margin-bottom: 10px;
        }
        .task-card h4 {
            font-size: 18px;
            margin-bottom: 10px;
        }
        .task-card p {
            font-size: 16px;
            color: #666;
        }
        .task-card button {
            margin-top: 10px;
            padding: 10px;
            border: none;
            border-radius: 5px;
            background-color: #dc3545;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        .task-card button:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <%- include("nav") %>
    
    <!-- Form for Updating Task -->
    <form action="/task/adminupdate" method="post">
        <input type="text" name="title" id="title" placeholder="Title">
        <input type="text" name="content" id="content" placeholder="Content">
        <input type="text" name="category" id="category" placeholder="Category">
        <input type="text" name="_id" id="id" placeholder="ID">
        <input type="submit" value="Submit" id="btn">
    </form>
    
    <!-- Search by Category -->
    <input type="search" id="searchInput" placeholder="Enter category">
    <button id="searchButton">Search</button>

    <div id="box"></div>

    <script>
        // Fetch all tasks on page load
        fetch("/task/alltask")
        .then((res) => res.json())
        .then((data) => display(data));

        // Search functionality
        const searchButton = document.getElementById("searchButton");
        searchButton.addEventListener("click", () => {
            const searchQuery = document.getElementById("searchInput").value;
            fetchTasks(searchQuery);
        });

        const fetchTasks = (category) => {
            const url = category ? `/task/searchtask?category=${category}` : "/task/alltask";
            fetch(url)
            .then((res) => res.json())
            .then((data) => search(data))
            .catch((error) => console.error(error));
        };

        const search = (data) => {
            document.getElementById("box").innerHTML = "";
            if (data.length === 0) {
                document.getElementById("box").innerHTML = "<h3>No tasks found for the given category</h3>";
                return;
            }
            display(data);
        };

        // Display task cards
        const display = (data) => {
            document.getElementById("box").innerHTML = "";
            data.forEach((task) => {
                let taskCard = document.createElement("div");
                taskCard.classList.add("task-card");

                let title = document.createElement("h1");
                title.innerText = `Title: ${task.title}`;
                
                let content = document.createElement("h4");
                content.innerText = `Content: ${task.content}`;

                let category = document.createElement("p");
                category.innerText = `Category: ${task.category}`;

                let userInfo = document.createElement("div");
                userInfo.innerHTML = `<p>Username: ${task.userID.username}</p>
                                      <p>Email: ${task.userID.email}</p>
                                      <p>Role: ${task.userID.role}</p>`;

                // Checkbox to mark task status, storing in localStorage
                let checkbox = document.createElement("input");
                checkbox.type = "checkbox";
                checkbox.id = task._id;
                checkbox.checked = localStorage.getItem(task._id) === "true";
                checkbox.addEventListener("change", () => {
                    localStorage.setItem(task._id, checkbox.checked);
                });

                // Update button pre-fills form
                let update = document.createElement("button");
                update.innerText = "Update";
                update.addEventListener("click", () => {
                    document.getElementById("title").value = task.title;
                    document.getElementById("content").value = task.content;
                    document.getElementById("category").value = task.category;
                    document.getElementById("id").value = task._id;
                    document.getElementById("btn").value = "Update";
                });

                // Delete button sends DELETE request
                let del = document.createElement("button");
                del.innerText = "Delete";
                del.addEventListener("click", () => {
                    fetch(`/task/deltask/${task._id}`, {
                        method: "DELETE"
                    }).then(() => location.reload());
                });

                taskCard.append(title, content, category, userInfo, checkbox, update, del);
                document.getElementById("box").append(taskCard);
            });
        };
    </script>
</body>
</html>
